package client

// This file is automatically generated! Do not modify it directly.

const Script = `
'use strict';var a = window.gogame = window.gogame || {};
var d = a.net = a.net || {};
d.Socket = function(c) {
  var b = this;
  b.d = new WebSocket(c);
  b.e = {};
  b.d.onmessage = function(c) {
    var f = JSON.parse(c.data);
    f.i in b.e ? b.e[f.i].forEach(function(b) {
      b(new e(f))
    }) : console.log(f)
  };
  var h = "";
  b.d.onopen = function() {
    b.d.send(h);
    b.send = function(c) {
      b.d.send(JSON.stringify(c))
    }
  };
  b.send = b.send = function(b) {
    h += JSON.stringify(b) + "\n"
  };
  b.c = b.listen = function(c, f) {
    b.e[c] = b.e[c] || [];
    b.e[c].push(f)
  }
};
d.u = function() {
  return(d.l - 1).toString(32)
};
d.a = function() {
  d.l++;
  return d.u()
};
d.l = 0;
d.v = d.a();
d.b = d.EntityID = d.a();
d.j = d.OtherEntID = d.a();
d.k = d.Tag = d.a();
d.f = d.Amount = d.a();
d.n = d.ChangeHealth = d.a();
d.o = d.ChangeResource = d.a();
d.r = d.EntitySpawned = d.a();
d.q = d.EntityDespawned = d.a();
d.h = d.EntityPosition = d.a();
d.m = d.CastSpell = d.a();
d.s = d.TimeLeft = d.a();
d.t = d.TotalTime = d.a();
d.g = d.EntityEffects = d.a();
d.FirstUnusedPacketID = d.a();
var e = d.Packet = function(c) {
  "object" == typeof c ? (this.i = c.i, this.p = c.p) : (this.i = c, this.p = {});
  this.set = this.set = function(b, c) {
    this.p[b] = c;
    return this
  };
  this.get = this.get = function(b) {
    return this.p[b]
  }
};
var g = a.client = {}, j = g.Entities = {};
g.disconnected = !1;
g.start = function(c) {
  g = a.client = new d.Socket(c);
  g.Entities = j;
  g.disconnected = !1;
  g.d.onerror = g.d.onclose = function() {
    g.disconnected = !0
  };
  g.c(d.r, function(b) {
    j[b.get(d.b)] = {parent:b.get(d.j), tag:b.get(d.k), position:[0, 0, 0], effects:[]}
  });
  g.c(d.q, function(b) {
    (function i(b) {
      delete j[b];
      for(var c in j) {
        j[c].parent == b && i(c)
      }
    })(b.get(d.b))
  });
  g.c(d.o, function(b) {
    j[b.get(d.b)].resource = b.get(d.f)
  });
  g.c(d.n, function(b) {
    j[b.get(d.b)].health = b.get(d.f)
  });
  g.c(d.m, function(b) {
    j[b.get(d.b)].spell = {target:b.get(d.j), timeLeft:b.get(d.s), totalTime:b.get(d.t), tag:b.get(d.k)}
  });
  g.c(d.h, function(b) {
    j[b.get(d.b)].position = b.get(d.h)
  });
  g.c(d.g, function(b) {
    j[b.get(d.b)].effects = b.get(d.g)
  })
};
setInterval(function() {
  for(var c in j) {
    "spell" in j[c] && 0 >= (j[c].spell.timeLeft -= 0.1) && delete j[c].spell
  }
}, 100);

`
